SRCS = ./
FLAGS = -Wall -Werror -Wextra -c
NAME = libft.a

.PHONY: all clean fclean re

all: $(NAME)

$(NAME): ft_atoi.o ft_isspace.o ft_memalloc.o ft_putchar_fd.o ft_strclr.o ft_strlcat.o ft_strnstr.o ft_bzero.o ft_isupper.o ft_memccpy.o ft_putendl.o ft_strcmp.o ft_strlen.o ft_strrchr.o ft_isalnum.o ft_itoa.o ft_memchr.o ft_putendl_fd.o ft_strcpy.o ft_strmap.o ft_strsplit.o ft_isalpha.o ft_lstadd.o ft_memcmp.o ft_putnbr.o ft_strdel.o ft_strmapi.o ft_strstr.o ft_isascii.o ft_lstdel.o ft_memcpy.o ft_putnbr_fd.o ft_strdup.o ft_strncat.o ft_strsub.o ft_isblank.o ft_lstdelone.o ft_memdel.o ft_putstr.o ft_strequ.o ft_strncmp.o ft_strtrim.o ft_isdigit.o ft_lstiter.o ft_memmove.o ft_putstr_fd.o ft_striter.o ft_strncpy.o ft_tolower.o ft_islower.o ft_lstmap.o ft_memset.o ft_strcat.o ft_striteri.o ft_strnequ.o ft_toupper.o ft_isprint.o ft_lstnew.o ft_putchar.o ft_strchr.o ft_strjoin.o ft_strnew.o ft_abs.o ft_strrev.o
	@ar rc $(NAME) ft_atoi.o ft_isspace.o ft_memalloc.o ft_putchar_fd.o ft_strclr.o ft_strlcat.o ft_strnstr.o ft_bzero.o ft_isupper.o ft_memccpy.o ft_putendl.o ft_strcmp.o ft_strlen.o ft_strrchr.o ft_isalnum.o ft_itoa.o ft_memchr.o ft_putendl_fd.o ft_strcpy.o ft_strmap.o ft_strsplit.o ft_isalpha.o ft_lstadd.o ft_memcmp.o ft_putnbr.o ft_strdel.o ft_strmapi.o ft_strstr.o ft_isascii.o ft_lstdel.o ft_memcpy.o ft_putnbr_fd.o ft_strdup.o ft_strncat.o ft_strsub.o ft_isblank.o ft_lstdelone.o ft_memdel.o ft_putstr.o ft_strequ.o ft_strncmp.o ft_strtrim.o ft_isdigit.o ft_lstiter.o ft_memmove.o ft_putstr_fd.o ft_striter.o ft_strncpy.o ft_tolower.o ft_islower.o ft_lstmap.o ft_memset.o ft_strcat.o ft_striteri.o ft_strnequ.o ft_toupper.o ft_isprint.o ft_lstnew.o ft_putchar.o ft_strchr.o ft_strjoin.o ft_strnew.o ft_abs.o ft_strrev.o
	@ranlib $(NAME)

ft_atoi.o: $(SRCS)ft_atoi.c
	@gcc $(FLAGS) $(SRCS)ft_atoi.c

ft_isspace.o: $(SRCS)ft_isspace.c
	@gcc $(FLAGS) $(SRCS)ft_isspace.c

ft_memalloc.o: $(SRCS)ft_memalloc.c
	@gcc $(FLAGS) $(SRCS)ft_memalloc.c

ft_putchar_fd.o: $(SRCS)ft_putchar_fd.c
	@gcc $(FLAGS) $(SRCS)ft_putchar_fd.c

ft_strclr.o: $(SRCS)ft_strclr.c
	@gcc $(FLAGS) $(SRCS)ft_strclr.c

ft_strlcat.o: $(SRCS)ft_strlcat.c
	@gcc $(FLAGS) $(SRCS)ft_strlcat.c

ft_strnstr.o: $(SRCS)ft_strnstr.c
	@gcc $(FLAGS) $(SRCS)ft_strnstr.c

ft_bzero.o: $(SRCS)ft_bzero.c
	@gcc $(FLAGS) $(SRCS)ft_bzero.c

ft_isupper.o: $(SRCS)ft_isupper.c
	@gcc $(FLAGS) $(SRCS)ft_isupper.c

ft_memccpy.o: $(SRCS)ft_memccpy.c
	@gcc $(FLAGS) $(SRCS)ft_memccpy.c

ft_putendl.o: $(SRCS)ft_putendl.c
	@gcc $(FLAGS) $(SRCS)ft_putendl.c

ft_strcmp.o: $(SRCS)ft_strcmp.c
	@gcc $(FLAGS) $(SRCS)ft_strcmp.c

ft_strlen.o: $(SRCS)ft_strlen.c
	@gcc $(FLAGS) $(SRCS)ft_strlen.c

ft_strrchr.o: $(SRCS)ft_strrchr.c
	@gcc $(FLAGS) $(SRCS)ft_strrchr.c

ft_isalnum.o: $(SRCS)ft_isalnum.c
	@gcc $(FLAGS) $(SRCS)ft_isalnum.c

ft_itoa.o: $(SRCS)ft_itoa.c
	@gcc $(FLAGS) $(SRCS)ft_itoa.c

ft_memchr.o: $(SRCS)ft_memchr.c
	@gcc $(FLAGS) $(SRCS)ft_memchr.c

ft_putendl_fd.o: $(SRCS)ft_putendl_fd.c
	@gcc $(FLAGS) $(SRCS)ft_putendl_fd.c

ft_strcpy.o: $(SRCS)ft_strcpy.c
	@gcc $(FLAGS) $(SRCS)ft_strcpy.c

ft_strmap.o: $(SRCS)ft_strmap.c
	@gcc $(FLAGS) $(SRCS)ft_strmap.c

ft_strsplit.o: $(SRCS)ft_strsplit.c
	@gcc $(FLAGS) $(SRCS)ft_strsplit.c

ft_isalpha.o: $(SRCS)ft_isalpha.c
	@gcc $(FLAGS) $(SRCS)ft_isalpha.c

ft_lstadd.o: $(SRCS)ft_lstadd.c
	@gcc $(FLAGS) $(SRCS)ft_lstadd.c

ft_memcmp.o: $(SRCS)ft_memcmp.c
	@gcc $(FLAGS) $(SRCS)ft_memcmp.c

ft_putnbr.o: $(SRCS)ft_putnbr.c
	@gcc $(FLAGS) $(SRCS)ft_putnbr.c

ft_strdel.o: $(SRCS)ft_strdel.c
	@gcc $(FLAGS) $(SRCS)ft_strdel.c

ft_strmapi.o: $(SRCS)ft_strmapi.c
	@gcc $(FLAGS) $(SRCS)ft_strmapi.c

ft_strstr.o: $(SRCS)ft_strstr.c
	@gcc $(FLAGS) $(SRCS)ft_strstr.c

ft_isascii.o: $(SRCS)ft_isascii.c
	@gcc $(FLAGS) $(SRCS)ft_isascii.c

ft_lstdel.o: $(SRCS)ft_lstdel.c
	@gcc $(FLAGS) $(SRCS)ft_lstdel.c

ft_memcpy.o: $(SRCS)ft_memcpy.c
	@gcc $(FLAGS) $(SRCS)ft_memcpy.c

ft_putnbr_fd.o: $(SRCS)ft_putnbr_fd.c
	@gcc $(FLAGS) $(SRCS)ft_putnbr_fd.c

ft_strdup.o: $(SRCS)ft_strdup.c
	@gcc $(FLAGS) $(SRCS)ft_strdup.c

ft_strncat.o: $(SRCS)ft_strncat.c
	@gcc $(FLAGS) $(SRCS)ft_strncat.c

ft_strsub.o: $(SRCS)ft_strsub.c
	@gcc $(FLAGS) $(SRCS)ft_strsub.c

ft_isblank.o: $(SRCS)ft_isblank.c
	@gcc $(FLAGS) $(SRCS)ft_isblank.c

ft_lstdelone.o: $(SRCS)ft_lstdelone.c
	@gcc $(FLAGS) $(SRCS)ft_lstdelone.c

ft_memdel.o: $(SRCS)ft_memdel.c
	@gcc $(FLAGS) $(SRCS)ft_memdel.c

ft_putstr.o: $(SRCS)ft_putstr.c
	@gcc $(FLAGS) $(SRCS)ft_putstr.c

ft_strequ.o: $(SRCS)ft_strequ.c
	@gcc $(FLAGS) $(SRCS)ft_strequ.c

ft_strncmp.o: $(SRCS)ft_strncmp.c
	@gcc $(FLAGS) $(SRCS)ft_strncmp.c

ft_strtrim.o: $(SRCS)ft_strtrim.c
	@gcc $(FLAGS) $(SRCS)ft_strtrim.c

ft_isdigit.o: $(SRCS)ft_isdigit.c
	@gcc $(FLAGS) $(SRCS)ft_isdigit.c

ft_lstiter.o: $(SRCS)ft_lstiter.c
	@gcc $(FLAGS) $(SRCS)ft_lstiter.c

ft_memmove.o: $(SRCS)ft_memmove.c
	@gcc $(FLAGS) $(SRCS)ft_memmove.c

ft_putstr_fd.o: $(SRCS)ft_putstr_fd.c
	@gcc $(FLAGS) $(SRCS)ft_putstr_fd.c

ft_striter.o: $(SRCS)ft_striter.c
	@gcc $(FLAGS) $(SRCS)ft_striter.c

ft_strncpy.o: $(SRCS)ft_strncpy.c
	@gcc $(FLAGS) $(SRCS)ft_strncpy.c

ft_tolower.o: $(SRCS)ft_tolower.c
	@gcc $(FLAGS) $(SRCS)ft_tolower.c

ft_islower.o: $(SRCS)ft_islower.c
	@gcc $(FLAGS) $(SRCS)ft_islower.c

ft_lstmap.o: $(SRCS)ft_lstmap.c
	@gcc $(FLAGS) $(SRCS)ft_lstmap.c

ft_memset.o: $(SRCS)ft_memset.c
	@gcc $(FLAGS) $(SRCS)ft_memset.c

ft_strcat.o: $(SRCS)ft_strcat.c
	@gcc $(FLAGS) $(SRCS)ft_strcat.c

ft_striteri.o: $(SRCS)ft_striteri.c
	@gcc $(FLAGS) $(SRCS)ft_striteri.c

ft_strnequ.o: $(SRCS)ft_strnequ.c
	@gcc $(FLAGS) $(SRCS)ft_strnequ.c

ft_toupper.o: $(SRCS)ft_toupper.c
	@gcc $(FLAGS) $(SRCS)ft_toupper.c

ft_isprint.o: $(SRCS)ft_isprint.c
	@gcc $(FLAGS) $(SRCS)ft_isprint.c

ft_lstnew.o: $(SRCS)ft_lstnew.c
	@gcc $(FLAGS) $(SRCS)ft_lstnew.c

ft_putchar.o: $(SRCS)ft_putchar.c
	@gcc $(FLAGS) $(SRCS)ft_putchar.c

ft_strchr.o: $(SRCS)ft_strchr.c
	@gcc $(FLAGS) $(SRCS)ft_strchr.c

ft_strjoin.o: $(SRCS)ft_strjoin.c
	@gcc $(FLAGS) $(SRCS)ft_strjoin.c

ft_strnew.o: $(SRCS)ft_strnew.c
	@gcc $(FLAGS) $(SRCS)ft_strnew.c

ft_abs.o: $(SRCS)ft_abs.c
	@gcc $(FLAGS) $(SRCS)ft_abs.c

ft_strrev.o: $(SRCS)ft_strrev.c
	@gcc $(FLAGS) $(SRCS)ft_strrev.c

clean:
	@rm -rf *.o

fclean: clean
	@rm $(NAME)

re: fclean all

.NOTPARALLEL: